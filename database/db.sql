USE OFS;

-- TABLE FOR LOGIN DETAILS
CREATE TABLE LOGIN (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USERNAME VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    ACCOUNTCREATIONDATE DATE NOT NULL
);

-- TABLE FOR GENERAL INFO
CREATE TABLE INFO (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    LOGINID INT NOT NULL,
    ADDRESS VARCHAR(255),
    LATITUDE DECIMAL(10, 8),
    LONGITUDE DECIMAL(11, 8),
    FOREIGN KEY (LOGINID) REFERENCES LOGIN(ID)
);

-- TABLE FOR EMPLOYEES
CREATE TABLE EMPLOYEES (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    LOGINID INT NOT NULL,
    FIRSTNAME VARCHAR(255),
    LASTNAME VARCHAR(255),
    SSN CHAR(64),  -- ASSUMING THE SSN IS HASHED
    EMAIL VARCHAR(255),
    PHONE VARCHAR(20),
    ADDRESS VARCHAR(255),
    SALARY DECIMAL(10, 2),  -- HOURLY SALARY
    STARTDATE DATE,
    ENDDATE DATE,
    FOREIGN KEY (LOGINID) REFERENCES LOGIN(ID)
);

-- TABLE FOR EMPLOYEE HOURS
CREATE TABLE EMPLOYEE_HOURS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    EMPLOYEEID INT NOT NULL,
    HOURSWORKED DECIMAL(5, 2),  -- BI-WEEKLY BASIS
    FOREIGN KEY (EMPLOYEEID) REFERENCES EMPLOYEES(ID)
);

-- TABLE FOR PRODUCTS
CREATE TABLE PRODUCTS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    PRODUCTNAME VARCHAR(255),
    PRODUCTDESCRIPTION TEXT,
    QUANTITY INT,
    REORDERLEVEL INT,
    REORDERQUANTITY INT,
    PRICE DECIMAL(10, 2),
    WEIGHT DECIMAL(5, 2)  -- PER UNIT
);

-- TABLE FOR SUPPLIERS
CREATE TABLE SUPPLIERS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    LOGINID INT NOT NULL,
    SUPPLIERNAME VARCHAR(255),
    EMAIL VARCHAR(255),
    PHONE VARCHAR(20),
    ADDRESS VARCHAR(255),
    FOREIGN KEY (LOGINID) REFERENCES LOGIN(ID)
);

-- TABLE FOR CUSTOMERS
CREATE TABLE CUSTOMERS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    LOGINID INT NOT NULL,
    FIRSTNAME VARCHAR(255),
    LASTNAME VARCHAR(255),
    EMAIL VARCHAR(255),
    PHONE VARCHAR(20),
    ADDRESS VARCHAR(255),
    LATITUDE DECIMAL(10, 8),
    LONGITUDE DECIMAL(11, 8),
    FOREIGN KEY (LOGINID) REFERENCES LOGIN(ID)
);

-- TABLE FOR SALES
CREATE TABLE SALES (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    PRICE DECIMAL(10, 2),  -- TOTAL PRICE
    SALEDATE DATE,
    PAYMENTDETAILS VARCHAR(255)  -- TBD ONCE STRIPE IS INTEGRATED
);

-- TABLE FOR SALES PRODUCTS
CREATE TABLE SALES_PRODUCTS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    SALESID INT NOT NULL,
    PRODUCTID INT NOT NULL,
    QUANTITY INT,
    PRICE DECIMAL(10, 2),  -- PRICE ACCOUNTED FOR QUANTITY
    FOREIGN KEY (SALESID) REFERENCES SALES(ID),
    FOREIGN KEY (PRODUCTID) REFERENCES PRODUCTS(ID)
);

-- TABLE FOR ORDERS
CREATE TABLE ORDERS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    PRICE DECIMAL(10, 2),  -- TOTAL PRICE
    ORDERDATE DATE,
    PAYMENTDETAILS VARCHAR(255)  -- TBD ONCE STRIPE IS INTEGRATED
);

-- TABLE FOR ORDERS PRODUCTS
CREATE TABLE ORDERS_PRODUCTS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ORDERID INT NOT NULL,
    PRODUCTID INT NOT NULL,
    QUANTITY INT,
    PRICE DECIMAL(10, 2),  -- PRICE ACCOUNTED FOR QUANTITY
    FOREIGN KEY (ORDERID) REFERENCES ORDERS(ID),
    FOREIGN KEY (PRODUCTID) REFERENCES PRODUCTS(ID)
);

-- TABLE FOR BALANCE
CREATE TABLE BALANCE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    BALANCE DECIMAL(10, 2),
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);